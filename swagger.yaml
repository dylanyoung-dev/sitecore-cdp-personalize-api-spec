---
openapi: 3.0.0
info:
  title: Unofficial Sitecore CDP/Personalize API
  description: This is the unofficial API definition for Sitecore CDP and Personalize, that I use for reference purposes in the community.
  version: 0.0.1
servers:
  - url: https://api-us.boxever.com
    description: 'US'
  - url: https://api.boxever.com
    description: 'EU'
  - url: https://api-ap-southeast-2-production.boxever.com
    description: 'APJ'
tags:
  - name: Batch APIs
    description: 'APIs specifically available to Sitecore CDP.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-1/overview-of-sitecore-cdp-batch-api.html'
      description: 'Sitecore Official Documentation'
  - name: Stream / Real-Time APIs
    description: 'APIs available for Sitecore CDP/Personalize.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-1/overview-of-sitecore-cdp-stream-apis.html'
      description: 'Sitecore Official Documentation'
  - name: Interactive / Rest APIs
    description: 'APIs specifically available to Sitecore CDP.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-0/overview-of-sitecore-cdp-rest-apis.html'
      description: 'Sitecore Official Documentation'
  - name: Tenant Management
    description: 'APIs available for Sitecore CDP/Personalize depending on the feature'
components:
  securitySchemes:
    oAuthCredentials:
      type: oauth2
      description: ''
      flows:
        clientCredentials:
          tokenUrl: /v2/oauth/token
          scopes: {}
    oAuthPassword:
      type: oauth2
      description: ''
      flows:
        password:
          tokenUrl: /v2/oauth/token 
          scopes: {}    
  schemas:
    Connection:
      type: object
      properties:
        clientKey:
          type: string
          format: string
          example: 'ztcr3udcjdp1nagu1162xan03rntefns'
        href:
          type: string
          format: string
          example: 'http://api-us.boxever.com/v2/connections/33dd8cb7-e32e-4766-c593-cbe400e19d7d'
        ref:
          type: string
          format: uuid
          example: '33dd8cb7-e32e-4766-c593-cbe400e19d7d'
        name:
          type: string
          example: 'arbitrary connection name'
        description:
          type: string
          example: 'Connection description, and what it does'
        modifiedByRef:
          type: string
          format: uuid
    InputMappings:
      type: object
    OutputMappings:
      type: object
    ConnectionReguest:
      type: object
    ConnectionAuth:
      type: object
      properties:
        authType:
          type: string
          example: 'NONE'
paths:
  /v1.2/event/create.json:
    get:
      tags: 
        - Stream / Real-Time APIs
      summary: ''
      description: ''
      parameters:
        - name: 'client_key'
          required: true
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
  /v1.2/browser/create.json:
    get:
      tags:
        - Stream / Real-Time APIs
      summary: ''
      description: ''
      parameters:
        - name: 'client_key'
          required: true
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
  /v2/guests:
    get:
      tags: [ "Interactive / Rest APIs|Guests" ]
      summary: 'Locate Guests'
      description: ''
      security:
        - BasicAuth: []
      parameters:
        - name: email
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: identifiers.provider
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: identifiers.id
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: offset
          in: query
          description: 'Number of guest records to offset for pagination'
          required: false
          example: 300
          schema:
            type: number
        - name: limit
          in: query
          description: 'Number of guest records to return'
          required: false
          example: 100
          schema:
            type: number
      responses:
        '200':
          description: ''
  /v2/guests/{guestRef}:
    get:
      tags: ["Interactive / Rest APIs|Templates" ]
      summary: ''
      description: ''
      security:
        - BasicAuth: []
      parameters:
        - name: guestRef
          in: path
          description: ''
          required: true
          example: ''
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: ''
  /v3/templates:
    get:
      tags: ["Tenant Management|Templates"]
      summary: ''
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      parameters:
        - name: type
          in: query
          description: ''
          required: false
          example: 'WEB'
          schema:
            type: string
            format: string
      responses:
        '200':
          description: ''
        '401':
          description: 'UNAUTHORIZED'
  /v3/flowDefinitions:
    get:
      tags: [ "Tenant Management|Flows" ]
      summary: ''
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      parameters:
        - name: expand
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: boolean
      responses:
        '200':
          description: ''
  /v2/connections:
    get:
      tags: [ "Tenant Management|Connections"]
      summary: 'Retrieve Connections'
      description: ''
      security:
        - oAuthPassword: []
      responses:
        '200':
          description: ''
  /v2/connections/{connectionRef}:
    get:
      tags: [ "Tenant Management|Connections"]
      summary: ''
      description: ''
      security:
        - oAuthPassword: []
      parameters:
        - name: connectionRef
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
    