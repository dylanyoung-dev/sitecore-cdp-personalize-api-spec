---
openapi: 3.0.0
info:
  title: Unofficial Sitecore CDP/Personalize API
  description: This is the unofficial API definition for Sitecore CDP and Personalize, that I use for reference purposes in the community.
  version: 0.0.1
servers:
  - url: https://api-us.boxever.com
    description: 'US'
  - url: https://api.boxever.com
    description: 'EU'
  - url: https://api-ap-southeast-2-production.boxever.com
    description: 'APJ'
tags:
  - name: Batch APIs
    description: 'APIs specifically available to Sitecore CDP.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-1/overview-of-sitecore-cdp-batch-api.html'
      description: 'Sitecore Official Documentation'
  - name: Stream / Real-Time APIs
    description: 'APIs available for Sitecore CDP/Personalize.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-1/overview-of-sitecore-cdp-stream-apis.html'
      description: 'Sitecore Official Documentation'
  - name: Interactive / Rest APIs
    description: 'APIs specifically available to Sitecore CDP.'
    externalDocs:
      url: 'https://doc.sitecore.com/cdp/en/developers/sitecore-customer-data-platform--data-model-2-0/overview-of-sitecore-cdp-rest-apis.html'
      description: 'Sitecore Official Documentation'
  - name: Tenant Management
    description: 'APIs available for Sitecore CDP/Personalize depending on the feature'
components:
  responses:
    UnAuthorized:
      description: 'UnAuthorized'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'UNAUTHORIZED'
              code:
                type: string
                example: '401'
              message:
                type: string
                example: 'Authentication credentials are required to access the resource.  All requests must be authenticated.'
              moreInfoUrl:
                type: string
                example: 'Contact Sitecore support here: https://support.sitecore.com'
  securitySchemes:
    oAuthCredentials:
      type: oauth2
      description: ''
      flows:
        clientCredentials:
          tokenUrl: /v2/oauth/token
          scopes: {}
    oAuthPassword:
      type: oauth2
      description: ''
      flows:
        password:
          tokenUrl: /v2/oauth/token 
          scopes: {}    
  schemas:
    Connection:
      type: object
      properties:
        clientKey:
          type: string
          format: string
          example: 'ztcr3udcjdp1nagu1162xan03rntefns'
        href:
          type: string
          format: string
          example: 'http://api-us.boxever.com/v2/connections/33dd8cb7-e32e-4766-c593-cbe400e19d7d'
        ref:
          type: string
          format: uuid
          example: '33dd8cb7-e32e-4766-c593-cbe400e19d7d'
        name:
          type: string
          example: 'arbitrary connection name'
        description:
          type: string
          example: 'Connection description, and what it does'
        modifiedByRef:
          type: string
          format: uuid
    InputMappings:
      type: object
    OutputMappings:
      type: object
    ConnectionReguest:
      type: object
    ConnectionAuth:
      type: object
      properties:
        authType:
          type: string
          example: 'NONE'
    Guest:
      type: object
      properties:
        href:
          type: string
          format: string
          example: ''
        ref:
          type: string
          format: uuid
          example: ''
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        firstSeen:
          type: string
          format: date-time
        lastSeen:
          type: string
          format: date-time
        guestType:
          type: string
        gender:
          type: string
        identityStatus:
          type: string
        email:
          type: string
    BatchSegment:
      type: object
      properties:
        friendlyId:
          type: string
          example: 'segment_test_1'
        status:
          type: string
          example: 'LIVE'
        type:
          type: string
          example: 'BASIC'
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]
        executions:
          type: object
          properties:
            href:
              type: string
              example: 'https://api-us.boxever.com/v4/segmentDefinitions/b6174250-fd87-3dda-8673-8187b2addad4/executions'
        revisions:
          type: object
          properties:
            href:
              type: string
              example: 'https://api-us.boxever.com/v4/segmentDefinitions/b6174250-fd87-3dda-8673-8187b2addad4/revisions'
        size:
          type: number
          example: 13
        lastRunAt:
          type: string
          format: date-time
          example: '2022-10-11T04:09:26.231Z'
        lastLiveAt:
          type: string
          format: date-time
          example: '2022-10-11T04:09:26.231Z'
        
paths:
  /v1.2/event/create.json:
    get:
      tags: 
        - Stream / Real-Time APIs
      summary: ''
      description: ''
      parameters:
        - name: 'client_key'
          required: true
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
  /v1.2/browser/create.json:
    get:
      tags:
        - Stream / Real-Time APIs
      summary: ''
      description: ''
      parameters:
        - name: 'client_key'
          required: true
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
  /v2/guests:
    get:
      tags: [ "Interactive / Rest APIs|Guests" ]
      summary: 'Locate/Search Guests'
      description: ''
      security:
        - BasicAuth: []
      parameters:
        - name: email
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: firstName
          in: query
          description: ''
          required: false
          example: 'John'
          schema:
            type: string
        - name: lastName
          in: query
          description: ''
          required: false
          example: 'Smith'
          schema:
            type: string
        - name: identityStatus
          in: query
          description: ''
          required: false
          example: 'customer'
          schema:
            type: string
        - name: phoneNumber
          in: query
          description: ''
          required: false
          example: '555-555-5555'
          schema:
            type: string
        - name: identifiers.provider
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: identifiers.id
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: sort
          in: query
          description: ''
          required: false
          example: 'lastName::ASC'
          schema:
            type: string
        - name: offset
          in: query
          description: 'Number of guest records to offset for pagination'
          required: false
          example: 300
          schema:
            type: number
        - name: limit
          in: query
          description: 'Number of guest records to return'
          required: false
          example: 100
          schema:
            type: number
        - name: expand
          in: query
          description: ''
          required: false
          example: 'true'
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  href:
                    type: string
                  offset:
                    type: number
                  limit:
                    type: number
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        href:
                          type: string
        '401':
          $ref: '#/components/responses/UnAuthorized'
    post:
      tags: [ "Interactive / Rest APIs|Guests"]
      summary: 'Create a New Guest'
      description: ''
      security:
        - BasicAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '200':
          description: ''
  /v2/guests/{guestRef}:
    get:
      tags: ["Interactive / Rest APIs|Guests" ]
      summary: 'Retrieve Guest by GuestRef'
      description: ''
      security:
        - BasicAuth: []
      parameters:
        - name: guestRef
          in: path
          description: ''
          required: true
          example: ''
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
  /v3/templates:
    get:
      tags: ["Tenant Management|Templates"]
      summary: ''
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      parameters:
        - name: type
          in: query
          description: ''
          required: false
          example: 'WEB'
          schema:
            type: string
            format: string
      responses:
        '200':
          description: ''
        '401':
          description: 'UNAUTHORIZED'
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Server Error'
  /v3/templates/{templateRef}:
    get:
      tags: ["Tenant Management|Templates"]
      summary: 'Retrieve Template by Ref'
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      parameters:
        - name: templateRef
          description: ''
          in: path
          required: true
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/UnAuthorized'
  /v3/flowDefinitions:
    get:
      tags: [ "Tenant Management|Flows" ]
      summary: ''
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      parameters:
        - name: expand
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: boolean
      responses:
        '200':
          description: ''
        '401':
          $ref: '#/components/responses/UnAuthorized'
  /v2/configurations:
    get:
      tags: [ "Tenant Management|Miscellaneous" ]
      summary: 'Get Tenant Configuration'
      description: ''
      security:
        - oAuthCredentials: []
        - oAuthPassword: []
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/UnAuthorized'
  /v2/connections:
    get:
      tags: [ "Tenant Management|Connections"]
      summary: 'Retrieve Connections'
      description: ''
      security:
        - oAuthPassword: []
      responses:
        '200':
          description: ''
        '401':
          $ref: '#/components/responses/UnAuthorized'
  /v2/connections/{connectionRef}:
    get:
      tags: [ "Tenant Management|Connections"]
      summary: ''
      description: ''
      security:
        - oAuthPassword: []
      parameters:
        - name: connectionRef
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/UnAuthorized'
        '404':
          description: Not Found
  /v4/segmentDefinitions:
    get:
      tags: [ "Tenant Management|Batch Segmentation"]
      summary: 'Retrieve all Batch Segment Definitions'
      description: ''
      security:
        - oAuthPassword: []
        - oAuthCredentials: []
      responses:
        '200':
          description: ''
        '401':
          $ref: '#/components/responses/UnAuthorized'
    post:
      tags: [ "Tenant Management|Batch Segmentation"]
      summary: 'Create Batch Segment Definition'
      description: ''
      security:
        - oAuthPassword: []
        - oAuthCredentials: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSegment'
        '401':
          $ref: '#/components/responses/UnAuthorized'
  /v4/segmentDefinitions/{segmentDefinitionRef}:
    get:
      tags: [ "Tenant Management|Batch Segmentation"]
      summary: ''
      description: ''
      security:
        - oAuthPassword: []
        - oAuthCredentials: []
      parameters:
        - name: segmentDefinitionRef
          in: path
          required: true
          schema:
            type: string
          description: 'Provide a `uuid ref` (b6174250-fd87-3dda-8673-8187b2addad4) or a `FriendlyId`.'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSegment'
        '400':
          description: 'Bad Request'
    put:
      tags: [ "Tenant Management|Batch Segmentation"]
      summary: 'Update a Batch Segment Definition'
      description: ''
      security:
        - oAuthPassword: []
        - oAuthCredentials: []
      parameters:
        - name: segmentDefinitionRef
          in: path
          required: true
          schema:
            type: string
          description: 'Provide a `uuid ref` (b6174250-fd87-3dda-8673-8187b2addad4) or a `FriendlyId`.'
      responses:
        '200':
          description: ''